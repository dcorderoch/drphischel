##########################################################################################
HTTP VERB: TBD
api/controller/action

receives:
{
"IdNumber":"",
"Pass":"",
"Role":""
}

returns:
{
UserId
IdNumber
Name
LastName1
LastName2
BirthDate
}

##########################################################################################
HTTP VERB: POST
api/user/login

receives:
{
"":""
}

returns:
{
"":""
}
[DESC of what the return values mean]

BLL must:
-TBD, something the BLL must do

##########################################################################################
HTTP VERB: GET
api/doctor/getlistofpending

returns:
[
{
"DoctorId",
"OfficeAddress":"",
"CreditCardNumber:"",
"Name":"",
"LastName1":"",
"LastName2":"",
"PlaceResidence":"",
"BirthDate":"",
"Specialties":["",""]
},
{
"DoctorId",
"OfficeAddress":"",
"CreditCardNumber:"",
"Name":"",
"LastName1":"",
"LastName2":"",
"PlaceResidence":"",
"BirthDate":"",
"Specialties":["",""]
}
]

BLL must:
-get all the doctors pending to be approved by an admin user

##########################################################################################
HTTP VERB: POST
api/doctor/create

receives:
{
"DoctorId",
"UserId",
"Pass":"",
"OfficeAddress":"",
"Approved":"",
"CreditCardNumber:"",
"Name":"",
"LastName1":"",
"LastName2":"",
"PlaceResidence":"",
"BirthDate":"",
"Specialties":["",""]
}

returns:
{
"StatusCode":"N"
}
N=0 if 
N=1 if 
N=2 if 
N is determined in the BLL

BLL must:
-insert a user
-insert a doctor
-insert the specialties (in the doctor's specialties table)

##########################################################################################
HTTP VERB: POST
api/doctor/update

receives:
{
"DoctorId",
"UserId",
"Pass":"",
"OfficeAddress":"",
"Approved":"",
"CreditCardNumber:"",
"Name":"",
"LastName1":"",
"LastName2":"",
"PlaceResidence":"",
"BirthDate":"",
"Specialties":["",""]
}

returns:
{
"StatusCode":"N"
}
N=0 if 
N=1 if 
N=2 if 
N is determined in the BLL

BLL must:
-update a user
-update a doctor
-update the specialties (in the doctor's specialties table)

##########################################################################################
HTTP VERB: POST
api/doctor/delete

receives:
{
"DoctorId",
"UserId"
}

returns:
{
"StatusCode":"N"
}
N=0 if 
N=1 if 
N=2 if 
N is determined in the BLL

BLL must:
-delete a user
-delete a doctor
-delete the doctor's specialties (in the doctor's specialties table)

##########################################################################################
HTTP VERB: POST
api/doctor/getbypatient

receives:
{
"UserId":""
}

returns:
[
{
"DoctorId",
"OfficeAddress":"",
"Name":"",
"LastName1":"",
"LastName2":""
},
{
"DoctorId",
"OfficeAddress":"",
"Name":"",
"LastName1":"",
"LastName2":""
}
]

BLL must:
-get all the doctors the patient with the received UserId is associated with

##########################################################################################
HTTP VERB: POST
api/patient/getbymedic

receives:
{
"DoctorId"
}

returns:
{
"UserId":"",
"Name":"",
"LastName1":"",
"LastName2":""
}

##########################################################################################
HTTP VERB: POST
api/patient/createbymedic

receives:
{
"UserId":"",
"Pass":"",
"Name":"",
"LastName1":"",
"LastName2":"",
"ResidencePlace":"",
"BirthDate":"",
"DoctorID":""
}

returns:
{
"StatusCode":"N"
}
N=0 if 
N=1 if 
N=2 if 
N is determined in the BLL

BLL must:
-insert a user
-insert the patient (in the doctor's patient table)

##########################################################################################
HTTP VERB: POST
api/patient/createbyadmin

receives:
{
"UserId":"",
"Pass":"",
"Name":"",
"LastName1":"",
"LastName2":"",
"ResidencePlace":"",
"BirthDate":""
}

returns:
{
"StatusCode":"N"
}
N=0 if 
N=1 if 
N=2 if 
N is determined in the BLL

BLL must:
-insert a user

##########################################################################################
HTTP VERB: POST
api/patient/update

receives:
{
"UserId":"",
"Pass":"",
"Name":"",
"LastName1":"",
"LastName2":"",
"ResidencePlace":"",
"BirthDate":""
}

returns:
{
"StatusCode":"N"
}
N=0 if 
N=1 if 
N=2 if 
N is determined in the BLL

BLL must:
-update a user
-restrict UserId update (PKs are immutable)

##########################################################################################
HTTP VERB: POST
api/patient/delete

receives:
{
"UserId":""
}

returns:
{
"StatusCode":"N"
}
N=0 if 
N=1 if 
N=2 if 
N is determined in the BLL

BLL must:
-delete a user
-restrict UserId deletion (PKs are immutable)

##########################################################################################
HTTP VERB: POST
api/appointment/create

receives:
{
"UserId":"",
"DoctorId":"",
"AppointmentDate":""
}

returns:
{
"StatusCode":"N"
}
N=0 if 
N=1 if 
N=2 if 
N is determined in the BLL

BLL must:
-verify the appointment can be made
-create/make the appointment

##########################################################################################
HTTP VERB: POST
api/appointment/update

receives:
{
"UserId":"",
"DoctorId":"",
"AppointmentDate":""
}

returns:
{
"StatusCode":"N"
}
N=0 if 
N=1 if 
N=2 if 
N is determined in the BLL

BLL must:
-verify the appointment can be updated
-update the appointment

##########################################################################################
HTTP VERB: POST
api/appointment/delete

receives:
{
"UserId":"",
"DoctorId":"",
"AppointmentDate":""
}

returns:
{
"StatusCode":"N"
}
N=0 if 
N=1 if 
N=2 if 
N is determined in the BLL

BLL must:
-verify the appointment can be deleted
-delete the appointment

##########################################################################################
HTTP VERB: POST
api/appointment/getbyDoctorId

receives:
{
"DoctorId":""
}

returns:
[
{
"UserId":"",
"Name":"",
"LastName1":"",
"LastName2":"",
"Date":""
},
{
"UserId":"",
"Name":"",
"LastName1":"",
"LastName2":"",
"Date":""
}
]

##########################################################################################
HTTP VERB: POST
api/medicalrecords/viewallbypatient

receives:
{
"UserId":""
}

returns:
[
{
"AppointmentDate": "",
"MRDescription":"",
"MRDiagnosis":"",
[{"MedicineName":"","BranchOfficeName":""},{"MedicineName":"","BranchOfficeName":""}]
},
{
"AppointmentDate": "",
"MRDescription":"",
"MRDiagnosis":"",
[{"MedicineName":"","BranchOfficeName":""},{"MedicineName":"","BranchOfficeName":""}]
}
]

BLL must:
- make CSMedicineNames as a single string value out of the names of the drugs the doctor prescribed

##########################################################################################
HTTP VERB: POST
api/medicalrecords/create

receives:
{
"UserId":"",
"Date":"",
"Description":"",
"Diagnosis":"",
"PrescriptionId":""
}

returns:
{
"StatusCode":"N"
}
N=0 if 
N=1 if 
N=2 if 
N is determined in the BLL

BLL must:
-insert the medicalrecord data and the corresponding intermediate tables data
-insert prescription data in the corresponding table

##########################################################################################
HTTP VERB: POST
api/medicalrecords/update

receives:
{
"UserId":"",
"Date":"",
"Description":"",
"Diagnosis":"",
"PrescriptionId ":""
}

returns:
{
"StatusCode":"N"
}
N=0 if 
N=1 if 
N=2 if 
N is determined in the BLL

BLL must:
-update the medicalrecord data and the corresponding intermediate tables data
-update prescription data in the corresponding table

##########################################################################################
HTTP VERB: POST
api/prescription/create

receives:
{
"UserId":"",
"DoctorId":"",
[{"MedicineId":"","BranchOfficeId":""},{"MedicineId":"","BranchOfficeId":""}]
}
-The last of the received values is a list (of 1 or more elements) of pairs of medicine names and the branch office they belong to that were prescribed by the doctor to the patient

returns:
{
"StatusCode":"N"
}
N=0 if 
N=1 if 
N=2 if 
N is determined in the BLL

BLL must:
-insert prescription data in the corresponding tables

##########################################################################################
HTTP VERB: POST
api/prescription/update

receives:
{
"PrescriptionId ":"",
"UserId":"",
"DoctorId":"",
[{"MedicineId":"","BranchOfficeId":""},{"MedicineId":"","BranchOfficeId":""}]
}
-The last of the received values is a list (of 1 or more elements) of pairs of medicine names and the branch office they belong to that were prescribed by the doctor to the patient

returns:
{
"StatusCode":"N"
}
N=0 if 
N=1 if 
N=2 if 
N is determined in the BLL

BLL must:
-update prescription data in the corresponding tables

##########################################################################################
HTTP VERB: POST
api/prescription/delete

receives:
{
"PrescriptionId ":""
}

returns:
{
"StatusCode":"N"
}
N=0 if 
N=1 if 
N=2 if 
N is determined in the BLL

BLL must:
-delete prescription data in the corresponding tables

##########################################################################################
HTTP VERB: POST
api/prescription/getbydoctorid

receives:
{
"DoctorId":""
}

returns:
{
"PrescriptionId ":"",
"UserId":"",
[{"MedicineName":"","BranchOfficeName":""},{"MedicineName":"","BranchOfficeName":""}]
}

##########################################################################################
HTTP VERB: POST
api/prescription/update

receives:
{
"PrescriptionId ":"",
"UserId":"",
"DoctorId":"",
[{"MedicineId":"","BranchOfficeId":""},{"MedicineId":"","BranchOfficeId":""}]
}
-The last of the received values is a list (of 1 or more elements) of pairs of medicine names and the branch office they belong to that were prescribed by the doctor to the patient

returns:
{
"StatusCode":"N"
}
N=0 if 
N=1 if 
N=2 if 
N is determined in the BLL

BLL must:
-update prescription data in the corresponding tables

##########################################################################################
HTTP VERB: POST
api/doctor/accept

receives:
{
"DoctorId":""
}

returns:
{
"StatusCode":"N"
}
N=0 if Error ocurred
N=1 if operation Succesful
N is determined in the BLL

BLL must:
-mark doctor as accepted in the corresponding table

##########################################################################################
HTTP VERB: GET
api/admin/charges

returns:
[
{
"Name":"",
"LastName1":"",
"LastName2":"",
"NumberOfPatients":""
},
{
"Name":"",
"LastName1":"",
"LastName2":"",
"NumberOfPatients":""
}
]

##########################################################################################
HTTP VERB: POST
api/admin/addnewspecialty

receives:
{
"specName":""
}

returns:
{
"StatusCode":"N"
}
N=0 if 
N=1 if 
N=2 if 
N is determined in the BLL

BLL must:
-insert new medical specialty

##########################################################################################
HTTP VERB: GET
api/admin/sync

returns:
{
"StatusCode":"N"
}
N=0 if 
N=1 if 
N=2 if 
N is determined in the BLL

BLL must:
-verify success and send apropriate reply